{
  "hash": "4f238923869345c89a0d959052be49de",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Classwork4\"\nformat: html\n---\n\n\n\n\n# Setup\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) # Sine qua non\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   4.0.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(mosaic) # Out all-in-one package\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRegistered S3 method overwritten by 'mosaic':\n  method                           from   \n  fortify.SpatialPolygonsDataFrame ggplot2\n\nThe 'mosaic' package masks several functions from core packages in order to add \nadditional features.  The original behavior of these functions should not be affected by this.\n\nAttaching package: 'mosaic'\n\nThe following object is masked from 'package:Matrix':\n\n    mean\n\nThe following objects are masked from 'package:dplyr':\n\n    count, do, tally\n\nThe following object is masked from 'package:purrr':\n\n    cross\n\nThe following object is masked from 'package:ggplot2':\n\n    stat\n\nThe following objects are masked from 'package:stats':\n\n    binom.test, cor, cor.test, cov, fivenum, IQR, median, prop.test,\n    quantile, sd, t.test, var\n\nThe following objects are masked from 'package:base':\n\n    max, mean, min, prod, range, sample, sum\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(ggformula) # Graphing package\nlibrary(skimr) # Looking at Data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'skimr'\n\nThe following object is masked from 'package:mosaic':\n\n    n_missing\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(janitor) # Clean the data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'janitor'\n\nThe following objects are masked from 'package:stats':\n\n    chisq.test, fisher.test\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(naniar) # Handle missing data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'naniar'\n\nThe following object is masked from 'package:skimr':\n\n    n_complete\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(visdat) # Visualise missing data\nlibrary(tinytable) # Printing Static Tables for our data\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'tinytable'\n\nThe following object is masked from 'package:ggplot2':\n\n    theme_void\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(DT) # Interactive Tables for our data\nlibrary(crosstable) # Multiple variable summaries\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'crosstable'\n\nThe following object is masked from 'package:purrr':\n\n    compact\n```\n\n\n:::\n:::\n\n\n\n\n# Reading csv file\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi <- read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/modeldata/taxi.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 10000 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): tip, company, local, dow, month\ndbl (3): rownames, distance, hour\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ntaxi_modified <- taxi %>%\n  naniar::replace_with_na_all(condition = ~ .x %in% common_na_strings) %>%\n  naniar::replace_with_na_all(condition = ~ .x %in% common_na_numbers) %>%\n  janitor::clean_names(case = \"snake\") %>%\n  janitor::remove_empty()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nvalue for \"which\" not specified, defaulting to c(\"rows\", \"cols\")\n```\n\n\n:::\n\n```{.r .cell-code}\ntaxi_modified\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10,000 × 8\n   rownames tip   distance company                      local dow   month  hour\n      <dbl> <chr>    <dbl> <chr>                        <chr> <chr> <chr> <dbl>\n 1        1 yes      17.2  Chicago Independents         no    Thu   Feb      16\n 2        2 yes       0.88 City Service                 yes   Thu   Mar       8\n 3        3 yes      18.1  other                        no    Mon   Feb      18\n 4        4 yes      20.7  Chicago Independents         no    Mon   Apr       8\n 5        5 yes      12.2  Chicago Independents         no    Sun   Mar      21\n 6        6 yes       0.94 Sun Taxi                     yes   Sat   Apr      23\n 7        7 yes      17.5  Flash Cab                    no    Fri   Mar      12\n 8        8 yes      17.7  other                        no    Sun   Jan       6\n 9        9 yes       1.85 Taxicab Insurance Agency Llc no    Fri   Apr      12\n10       10 yes       1.47 City Service                 no    Tue   Mar      14\n# ℹ 9,990 more rows\n```\n\n\n:::\n:::\n\n\n\n\n# Theme chosing\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRColorBrewer::display.brewer.all()\n```\n\n::: {.cell-output-display}\n![](Classwork4_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n\n\n# Data Munging \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## Convert `dow`, `local`, `month`, and `hour` into ordered factors\ntaxi_modified <- taxi_modified %>%\n  dplyr::mutate(\n\n    ## Variable \"tip\"\n    tip = base::factor(tip,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"yes\", \"no\"),\n      ordered = TRUE\n    ),\n\n    ## Variable \"company\"\n    company = base::factor(company), # Any order is OK.\n\n    ## Variable \"dow\"\n    dow = base::factor(dow,\n      levels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      labels = c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"),\n      ordered = TRUE\n    ),\n\n    ## Variable \"local\"\n    local = base::factor(local,\n      levels = c(\"yes\", \"no\"),\n      labels = c(\"yes\", \"no\"),\n      ordered = TRUE\n    ),\n\n    ## Variable \"month\"\n    month = base::factor(month,\n      levels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      labels = c(\"Jan\", \"Feb\", \"Mar\", \"Apr\"),\n      ordered = TRUE\n    ),\n\n    ## Variable \"hour\"\n    hour = base::factor(hour,\n      levels = c(0:23), labels = c(0:23),\n      ordered = TRUE\n    )\n  ) %>%\n  dplyr::relocate(where(is.factor), .after = rownames) # Move all factors to the left\n\ntaxi_modified %>% glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 10,000\nColumns: 8\n$ rownames <dbl> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ tip      <ord> yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, yes, y…\n$ company  <fct> Chicago Independents, City Service, other, Chicago Independen…\n$ local    <ord> no, yes, no, no, no, yes, no, no, no, no, no, no, no, yes, no…\n$ dow      <ord> Thu, Thu, Mon, Mon, Sun, Sat, Fri, Sun, Fri, Tue, Tue, Sun, W…\n$ month    <ord> Feb, Mar, Feb, Apr, Mar, Apr, Mar, Jan, Apr, Mar, Mar, Apr, A…\n$ hour     <ord> 16, 8, 18, 8, 21, 23, 12, 6, 12, 14, 18, 11, 12, 19, 17, 13, …\n$ distance <dbl> 17.19, 0.88, 18.11, 20.70, 12.23, 0.94, 17.47, 17.67, 1.85, 1…\n```\n\n\n:::\n:::\n\n\n\n# Position dodge\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi_modified %>%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"dodge\"\n  ) %>%\n  gf_labs(title = \"Plot 2A: Dodged Bar Chart\") %>%\n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output-display}\n![](Classwork4_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n# Position stack\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi_modified %>%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"stack\"\n  ) %>%\n  gf_labs(\n    title = \"Plot 2B: Stacked Bar Chart\",\n    subtitle = \"Can we spot per group differences in proportions??\"\n  ) %>%\n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output-display}\n![](Classwork4_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n# Position fill\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntaxi_modified %>%\n  gf_bar(~local,\n    fill = ~tip,\n    position = \"fill\"\n  ) %>%\n  gf_labs(\n    title = \"Plot 2C: Filled Bar Chart\",\n    subtitle = \"Shows Per group differences in Proportions!\"\n  ) %>%\n  gf_refine(scale_fill_brewer(palette = \"Set1\"))\n```\n\n::: {.cell-output-display}\n![](Classwork4_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Classwork4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}